# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress

      - name: Generate key
        run: php artisan key:generate

      - name: Directory permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Compile assets
        run: |
          npm install
          npm run production

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_DRIVER: sync
        run: vendor/bin/phpunit

      - name: Push to server.
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.UC_HOST }}
          username: ${{ secrets.UC_USERNAME }}
          key: ${{ secrets.UC_KEY }}
          port: ${{ secrets.UC_PORT }}
          script: ${{ secrets.UC_SCRIPT }}
